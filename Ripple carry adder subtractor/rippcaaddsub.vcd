$date
	Sat Feb  4 09:16:37 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripp_ca_add_sub_tb $end
$var wire 4 ! S [3:0] $end
$var wire 4 " Cout [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % ctrl $end
$scope module ricas $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % CTRL $end
$var wire 4 ( S [3:0] $end
$var wire 4 ) Cout [3:0] $end
$var wire 4 * Bc [3:0] $end
$scope begin genblk1[1] $end
$scope module fa $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . sum $end
$var wire 1 / cout $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 sum $end
$var wire 1 4 cout $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 sum $end
$var wire 1 9 cout $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 % cin $end
$var wire 1 < sum $end
$var wire 1 = cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
1<
0;
1:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
b1 (
b0 '
b1 &
0%
b0 $
b1 #
b0 "
b1 !
$end
#3
13
1.
b110 !
b110 (
0<
11
b100 *
1+
0:
b100 $
b100 '
b10 #
b10 &
#6
19
17
14
03
12
b1110 "
b1110 )
1/
0.
08
b1 !
b1 (
1<
1,
b110 *
15
1:
b110 $
b110 '
b1011 #
b1011 &
#9
17
14
03
12
1/
1-
0.
08
19
b1111 "
b1111 )
1=
1;
b1 !
b1 (
1<
1,
16
b1111 *
0+
05
1%
b0 $
b0 '
b1 #
b1 &
#12
09
18
07
b11 "
b11 )
04
13
1.
b1110 !
b1110 (
0<
01
b1011 *
1+
0:
b100 $
b100 '
b10 #
b10 &
#15
0.
b1011 "
b1011 )
19
08
b101 !
b101 (
1<
0,
b1001 *
15
1:
b110 $
b110 '
b1011 #
b1011 &
#18
0<
02
17
19
1.
0/
03
b1101 "
b1101 )
14
b10 !
b10 (
08
11
0;
b1100 *
0+
10
05
b11 $
b11 '
b101 #
b101 &
#21
